#
# Flowmotion
# Backend API
# OpenAPI schema
#

openapi: 3.1.0
info:
  title: Flowmotion API
  description: API exposed by the Flowmotion Backend Service.
  version: 0.1.0
# TODO: add servers: eg. - url: https:/petstore3.swagger.io/api/v3/
servers: []
tags:
  - name: Congestion
    description: Congestion API returns traffic congestion levels at camera locations.
  - name: Routing
    description: Routing API finds the fastest route between two locations.
paths:
  /congestions:
    get:
      tags: [Congestion]
      summary: Retrieve congestion data
      description: 
          Returns traffic congestion data inferred from traffic cameras. Optionally filter by camera ID, time range, aggregate by time, and group by hour or day.
          By default, if no time range is specified in `begin`, `end` return only congestions ingested from the latest `updated_on` timestamp.
      parameters:
        - name: camera_id
          in: query
          description: Filter by congestion points by specific camera id.
          schema:
            type: string
        - name: agg
          in: query
          description: Aggregation method applied to congestion rating. By default, no aggregation is performed. Has no effect if `groupby` is not specified.
          schema:
            type: string
            enum: [min, max, avg]
            default: avg
        - name: groupby
          in: query
          description: Group congestion data by hour or day. `agg` must also be specified to supply an aggregation method.
          schema:
            type: string
            enum: [hour, day]
        - name: begin
          in: query
          description: Inclusive start of the time range (timestamp) to filter congestion data. If unspecified, defaults to the latest `updated_on` timestamp.
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: Exclusive end of the time range (timestamp) to filter congestion data. If unspecified, defaults to the latest `updated_on` timestamp.
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: A list of congestion data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Congestion"
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error

  /congested/{camera_id}/{groupby}:
    get:
      tags: [Congestion]
      summary: Retrieve congestion duration for a specific camera for a given time range.
      description: Returns the total time in seconds (as a float) when the camera was "congested" according to a threshold, grouped by hour or day.
      parameters:
        - name: camera_id
          in: path
          description: ID of the camera to retrieve congestion duration for
          required: true
          schema:
            type: string
        - name: groupby
          in: path
          description: Group congestion duration by hour or day
          required: true
          schema:
            type: string
            enum: [hour, day]
        - name: threshold
          in: query
          description: Congestion rating level (between 0 and 1) that is considered "congested"
          schema:
            type: number
            format: float
            minimum: 0
            maximum: 1
            default: 0.6
        - name: begin
          in: query
          description: Inclusive start of the time range (timestamp) to retrieve congestion duration.
          schema:
            type: string
            format: date-time
          required: true
        - name: end
          in: query
          description: Exclusive end of the time range (timestamp) to retrieve congestion duration.
          schema:
            type: string
            format: date-time
          required: true
      responses:
        "200":
          description: Total congested time in seconds, grouped by the specified interval
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
                  format: float
                  description: Total time in seconds the camera was congested during the specified interval
              examples:
                hour_example:
                  summary: Example of congestion times returned.
                  value: [3600.5, 1800.0, 2400.25]
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error

  /route:
    get:
      tags: [Routing]
      summary: Retrieve recommended routes between source and destination
      description: Returns a list of recommended routes from source to destination, including geometry, duration, distance, and step-by-step instructions.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                src:
                  type: object
                  properties:
                    kind:
                      type: string
                      enum: [address, location]
                      description: Specifies if the source is an address or a location
                    address:
                      $ref: "#/components/schemas/Address"
                    location:
                      $ref: "#/components/schemas/Location"
                  required:
                    - kind
                dest:
                  type: object
                  properties:
                    kind:
                      type: string
                      enum: [address, location]
                      description: Specifies if the destination is an address or a location
                    address:
                      oneOf:
                        - $ref: "#/components/schemas/Address"
                        - type: "null"
                    location:
                      oneOf:
                        - $ref: "#/components/schemas/Location"
                        - type: "null"
                  required:
                    - kind
              required:
                - src
                - dest
      responses:
        "200":
          description: List of recommended routes with details on geometry, duration, distance, and steps
          content:
            application/json:
              schema:
                type: object
                properties:
                  routes:
                    type: array
                    items:
                      type: object
                      properties:
                        geometry:
                          type: string
                          description: Polyline (precision 5) for drawing the entire route on a map
                        duration:
                          type: number
                          format: float
                          description: Estimated travel duration in seconds
                        distance:
                          type: number
                          format: float
                          description: Total travel distance in meters
                        steps:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Name of the road
                              duration:
                                type: number
                                format: float
                                description: Estimated duration of the step in seconds
                              distance:
                                type: number
                                format: float
                                description: Travel distance of the step in meters
                              geometry:
                                type: string
                                description: Polyline (precision 5) for drawing this step on a map
                              direction:
                                oneOf:
                                  - type: string
                                    description: Direction to take for the step
                                    enum:
                                      - uturn
                                      - sharp right
                                      - right
                                      - slight right
                                      - straight
                                      - slight left
                                      - left
                                      - sharp left
                                  - type: "null"
                              maneuver:
                                type: string
                                description: The type of maneuver to perform
                                enum:
                                  - turn
                                  - new name
                                  - depart
                                  - arrive
                                  - merge
                                  - on ramp
                                  - off ramp
                                  - fork
                                  - end of road
                                  - use lane
                                  - continue
                                  - roundabout
                                  - exit roundabout
                                  - rotary
                                  - exit rotary
                                  - roundabout turn
                                  - notification
                              instruction:
                                type: string
                                description: OSRM-style text instructions for this step
                              congestion:
                                oneOf:
                                  - $ref: "#/components/schemas/Congestion"
                                  - type: "null"
                            required:
                              - name
                              - duration
                              - distance
                              - geometry
                              - direction
                              - maneuver
                              - instruction
                              - congestion
                      required:
                        - geometry
                        - duration
                        - distance
                        - steps

components:
  schemas:
    Congestion:
      title: Congestion
      description: Traffic camera congestion rating.
      type: object
      properties:
        camera:
          title: Camera
          description: Traffic camera capturing traffic images
          type: object
          properties:
            id:
              type: string
            captured_on:
              type: string
              format: date-time
            retrieved_on:
              type: string
              format: date-time
            location:
              $ref: "#/components/schemas/Location"
          required:
            - id
            - captured_on
            - retrieved_on
            - location
        rating:
          title: Rating
          description: Traffic congestion rating
          type: object
          properties:
            rated_on:
              type: string
              format: date-time
            model_id:
              type: string
            value:
              description: 0-1 congestion rating with 1 being 'most congested'
              type: number
              minimum: 0
              maximum: 1
          required:
            - rated_on
            - model_id
            - value
        updated_on:
          type: string
          format: date-time
      required:
        - camera
        - rating
        - updated_on

    Address:
      type: object
      properties:
        text:
          type: string
          description: Full address text
        postcode:
          type: string
          description: Postal code of the source address
      required:
        - text
        - postcode

    Location:
      type: object
      properties:
        latitude:
          type: number
          format: float
          description: Latitude of the location
        longitude:
          type: number
          format: float
          description: Longitude of the location
      required:
        - latitude
        - longitude
